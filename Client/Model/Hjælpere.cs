// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using Client.Annotations;

namespace Client.Model
{
    public class Hjælpere : INotifyPropertyChanged
    {
      public  Hjælpere(int id, string navn,string telefonNummer, string kodeord, string email, bool isAdmin)
        {
            ID = id;
            Navn = navn;
            TelefonNummer = telefonNummer;
            Kodeord = kodeord;
            Email = email;
            IsAdmin = false;
        }

      public Hjælpere() { }

      private int _id { get; set; }
      private string _navn { get; set; }
      private string _telefonNummer { get; set; }
      private string _kodeord { get; set; }
      private string _email { get; set; }

        public int ID
        {
            get { return _id;}
            set { _id = value;
                OnPropertyChanged(nameof(ID));
            }
        }
        public string Navn
        {
            get { return _navn;}
            set { _navn = value; OnPropertyChanged(nameof(Navn)); }
        }
        public string TelefonNummer
        {
            get { return _telefonNummer;}
            set { _telefonNummer = value; OnPropertyChanged(nameof(TelefonNummer)); }
        }
        public string Kodeord
        {
            get { return _kodeord;}
            set { _kodeord = value; OnPropertyChanged(nameof(Kodeord)); }
        }
        public string Email
        {
            get { return _email;}
            set { _email = value; OnPropertyChanged(nameof(Email)); }
        }
        public bool IsAdmin { get; set; }

        public override string ToString()
        {
            return $"{ID} {Navn} {TelefonNummer} {Kodeord} {Email} {IsAdmin}";
        }

        public event PropertyChangedEventHandler PropertyChanged;

        [NotifyPropertyChangedInvocator]
        protected virtual void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}